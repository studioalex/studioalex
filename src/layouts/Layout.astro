---
import Head from './Head.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import siteData from '../data/site.json'

import type { ImageData, PostData } from '../components/atoms/Seo.astro'

import '../styles/styles.postcss'

export interface Props {
	title?: string
  description?: string
  image?: ImageData
  data?: PostData
  robots?: boolean
	styles?: string
	backgroundClass?: string
}

const {
	title,
  description = siteData.meta.description,
  image = siteData.meta.image,
  data,
  robots,
	styles,
	backgroundClass
} = Astro.props

function getTitle () {
  if (title) {
    return `${siteData.title} - ${title}`
  }
  return siteData.title
}
---

<!DOCTYPE html>
<html lang="en">
	<Head title={getTitle()} description={description} image={image} data={data} robots={robots}/>
  <!--
                                            ,,╓,
                                          ╓████████▄
                              ,╓▄▄▄xæ▄▄▄▓██████████▌
                        ,æ▀▀╙─            └╙▀▀██████
                    ,Æ▀└                        ╙▀█▌
                  ▄▀                               └▀▄
          ▄▓███▓▄Æ└                                    ▀▄
        ▓███████╙                           ▄▄▓▓▄▄▄,     ▀
      ▐██████▀                           ▄███████████▄   ╙µ    ▄▓██▓▄,
      └█████▀                           j██████████████   ╟  ▄██'▐▌.███
        ╙███▀                            ▐█▌ '██████████▌   █▓█ ╫█▀▀█▌ █▌
          ╙▌        ,▄██▓▄,               ██▓▓██████████▌   ╟███▀    ╙███
          ╫       ▄█████████▄              ▀███████████▀    ▐███▌    ▄███
          █      ████████╙ ▐█▌     ██▀       ╙▀▀██▀▀▀╙      █████████████
          █     █████████▄▄███                    ░░ '     ▄████████████▌
          ╟     ██████████████          ▄^                ▓█████████████
          ▌    ╟████████████      ▀══▀╙                ▄██████████████
          ╙▌    ╙████████▀└                         ╓▓█████████████▀─
            ▌     ─╙▀▀╙─  '░                    ▄▄██████████████▀▀
              ╙▄         ''                 ▄æ▀╙─ └╙╙▀▀▀▀▀█▀▀▀╙─
                ╙¼,                   ╓▄ª▀╙─              ╙µ
                  ╙▀╗▄╓,,,,,,▄▄▄M▀▀╙─                     █
                      ╟█████████▌                          ▐▄▄,
                      ██████████▌                          [████▄
        Hi there      ███████████▌                         '█████▌  ╓▄▄▄,
                  ▄▄██████████████▄                      ,▐█████████▀█▀███µ
                ,███▀████████████████▓,                   ░█████████ ▐▌,█^╟█µ
              ]█▌╙█'╟▌█████████████████▄               ;░█████████▀╙╙╙██▓▀█▌
              ▐██▄██▀▀▀██████████████████▄           ;░╓█████████'     █▒╓█
                █.╙█    ╙██████████████████▌      ,≤░',▓█████████▒     .███¬
                └███      ╟█████████████████░░░│''',▄▀╙╙╙╙╙███████,  ,▄██▀
                  ▀██▄    ▓████████████████▀,▄▄▄╧▀╙        ╙███████████▀
                    ▀███████████▀╙▀▀▀▀▀▀▀╙└└─                 ╙▀▀▀▀▀└
                      ─╙▀▀▀▀▀▀╙
  -->
	<body>
		<div class:list={[ 'layout', backgroundClass]}>
			<Header title="&lt;studio-alex/&gt;" />
			<main class:list={[ 'layout-content', styles]}>
		    <slot />
		  </main>
			<Footer />
		</div>
    <script>
      declare global {
        interface Window {
          netlifyIdentity: any
        }
      }
      if (window.netlifyIdentity) {
        window.netlifyIdentity.on("init", user => {
          if (!user) {
            window.netlifyIdentity.on("login", () => {
              document.location.href = "/admin/"
            })
          }
        })
      }
    </script>
	</body>
</html>

<style>
  .layout {
    min-width: 100%;
    min-height: 100%;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-content: stretch;
    align-items: stretch;
    overflow-x: hidden;
    overflow-y: auto;
    color: var(--theme-color-text);
    font-family: 'Montserrat', sans-serif;
    z-index: 0;

    &.background--praha {
      background-image: url("/images/karluvmost.jpg");
      background-repeat: no-repeat;
      background-position: 0 -40vh;
      background-size: 100vmax;
      transition: background 1s;

      @media only screen and (max-width: 2400px) {
        background-position: 0 -20vh;
      }
    }

    &-content {
      flex: 1 1 auto;
      align-self: auto;

      &.flex {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: flex-start;
        align-content: stretch;
        align-items: stretch;
      }
      
      &.flex-distribute {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: space-around;
        align-content: stretch;
        align-items: stretch;
      }

      &.flex-center {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: center;
        align-content: stretch;
        align-items: stretch;
      }


      &.size-full {
        max-width: var(--screen-size--wide);
        margin: 0 auto;
      }

      &.size-base {
        max-width: var(--screen-size--base);
        margin: 0 auto;
      }

      &.size-small {
        max-width: var(--screen-size--narrow);
        padding: 0 2rem;
        margin: 0 auto;
      }
    }
  }
</style>
